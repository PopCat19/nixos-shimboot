# Flake Check Workflow
#
# Purpose: Validates Nix flake configuration on pushes and PRs
# Triggers: Push/PR to main/dev branches with Nix file changes, manual dispatch
# Dependencies: DeterminateSystems/nix-installer-action, actions/checkout
#
# This workflow:
# - Runs nix flake check to validate configuration
# - Ensures flake integrity before merges
# - Provides CI validation for NixOS configurations
# - Only triggers when Nix files are modified

name: flake-check

on:
  push:
    branches: [ "main", "dev" ]
    paths:
      - '**.nix'
      - '**.lock'
  pull_request:
    branches: [ "main", "dev" ]
    paths:
      - '**.nix'
      - '**.lock'
  workflow_dispatch:
    inputs:
      runner_type:
        description: 'Runner type (self-hosted or GitHub-hosted)'
        required: true
        default: 'ubuntu-latest'
        type: choice
        options: [ubuntu-latest, popcat19-nixos0]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ github.event.inputs.runner_type || 'ubuntu-latest' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Run Nix formatter check
        run: |
          echo "✨ Checking nix fmt consistency..."
          nix fmt -- --check .
          echo "✅ Nix files are properly formatted."
        continue-on-error: false


      - name: Check flake
        run: |
          echo "🔍 Validating flake configuration..."
          nix flake check --accept-flake-config

          echo "## ✅ Flake Check Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          nix flake show --accept-flake-config >> $GITHUB_STEP_SUMMARY