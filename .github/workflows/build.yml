name: build

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  # ===========================================================
  #  üê£  Build Minimal Image (raw-rootfs-minimal)
  # ===========================================================
  build-minimal:
    name: Build minimal rootfs
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Aggressive cleanup before freeing with nothing-but-nix
      - name: Aggressive pre-cleanup
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          docker system prune -af || true
          sudo apt-get clean || true

      # 3Ô∏è‚É£ Reclaim disk space for Nix
      - name: Free disk space for Nix builds
        uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: rampage
          witness-carnage: true

      # 4Ô∏è‚É£ Install Nix
      - uses: cachix/install-nix-action@v27
        with:
          nix_version: 2.18.1
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            sandbox = true

      # 5Ô∏è‚É£ Setup Cachix
      - uses: cachix/cachix-action@v14
        with:
          name: shimboot-systemd-nixos
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      # 6Ô∏è‚É£ Build minimal rootfs
      - name: Build raw-rootfs-minimal
        run: |
          nix build --max-jobs 1 --impure --accept-flake-config .#raw-rootfs-minimal
          echo "‚úÖ Build of raw-rootfs-minimal complete!"

      # 7Ô∏è‚É£ Push to Cachix
      - name: Push minimal to Cachix
        run: |
          cachix push shimboot-systemd-nixos ./result
          echo "‚úÖ Pushed raw-rootfs-minimal to Cachix"

      # 8Ô∏è‚É£ Disk usage summary
      - name: Post-Build Disk Usage
        if: always()
        run: df -h /nix / || true

  # ===========================================================
  #  üçû  Build Full Image (raw-rootfs)
  # ===========================================================
  build-full:
    name: Build full rootfs
    needs: build-minimal     # wait for minimal to finish first
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Aggressive pre-cleanup
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          docker system prune -af || true
          sudo apt-get clean || true

      - name: Free disk space for Nix builds
        uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: rampage
          witness-carnage: true

      - uses: cachix/install-nix-action@v27
        with:
          nix_version: 2.18.1
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            sandbox = true

      - uses: cachix/cachix-action@v14
        with:
          name: shimboot-systemd-nixos
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build raw-rootfs (full)
        run: |
          nix build --max-jobs 1 --impure --accept-flake-config .#raw-rootfs
          echo "‚úÖ Build of raw-rootfs complete!"

      - name: Push full to Cachix
        run: |
          cachix push shimboot-systemd-nixos ./result
          echo "‚úÖ Pushed raw-rootfs to Cachix"

      - name: Post-Build Disk Usage
        if: always()
        run: df -h /nix / || true